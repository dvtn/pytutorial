Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# 数据模型层
> collapsed=`true`


## ORM简介
> collapsed=`true`


### Object Relational Mapping 对象关系映射

### 将对象映射到基于SQL的关系模型数据结构

### 操作实体对象的属性和方法，自动映射为复杂的SQL操作

## ORM基本步骤
> collapsed=`true`


### 1\.数据库配置
> collapsed=`true`


#### 配置引擎

#### 名称

### 2\.定义对象模型

### 3\.数据库迁移

### 4\.数据操作

## 模型类
> collapsed=`true`


### 定义数据相关信息，包括存储数据的字段及形为，一个模型映射一张数据表

### 一个python类，继承自 django\.db\.models\.Model

### 每个类属性，表现为一个数据库字段

### 嵌套类Meta声明更多选项
> collapsed=`true`


#### 声明字段未涵盖的其它选项

#### abstract = True 是否允许作为基类

#### ordering = \[\] 排序字段列

#### managed = True
> collapsed=`true`


##### 经由django migrate管理

#### app\_label='applabel'

#### table\_name = '生成表名'

#### get\_lastest\_by = '最新数据排序字段'

### 通过方法定义 模型逻辑

### django自动生成数据访问API

## 字段类型
> collapsed=`true`


### 通用属性
> collapsed=`true`


#### null=True/False 字段是否可以为NULL

#### blank=True/False 字段是否可以为空

#### choices=序列 选项列表

#### verbose\_name 友好名称

#### db\_column 数据库列名

#### db\_index 是否为索引

#### default 默认值

#### unique 是否唯一

#### unique\_for\_date 组合唯一

#### primary\_key 是否主键

### 标识类
> collapsed=`true`


#### django\.db\.models\.AutoField\(\)
> collapsed=`true`


##### 整型自增长主键字段

#### BigAutoField\(\)

#### UUIDField\(\)
> collapsed=`true`


##### 全局唯一标识符字段

### 文本
> collapsed=`true`


#### CharField\(\)
> collapsed=`true`


##### 字符字段

#### TextField\(\)
> collapsed=`true`


##### 文本字段

#### SlugField\(\)
> collapsed=`true`


##### 短标签字段

### 数字
> collapsed=`true`


#### IntegerField\(\)
> collapsed=`true`


##### 32位整型字段

#### SmallIntegerField\(\)
> collapsed=`true`


##### 16位短整型字段

#### BigIntegerField\(\)

#### PositiveIntegerField\(\)

#### FloatField\(\)
> collapsed=`true`


##### 浮点

#### DecimalField\(\)
> collapsed=`true`


##### 高精度小数

##### 属性
> collapsed=`true`


###### max\_digits

###### decimal\_places

### 选择
> collapsed=`true`


#### BooleanField\(\)

#### NullBooleanField\(\)

### 日期时间
> collapsed=`true`


#### DateField\(\)

#### TimeField\(\)

#### DateTimeField\(\)

#### 属性
> collapsed=`true`


##### auto\_now=False
> collapsed=`true`


###### 某条数据最后更新时间

##### auto\_now\_add=False
> collapsed=`true`


###### 数据创建时间

#### DurationField\(\)

### 网络
> collapsed=`true`


#### EmailField\(\)
> collapsed=`true`


##### 自带验证功能

#### URLField\(\)

#### GenericIPAddressField\(\)
> collapsed=`true`


##### \.protocol
> collapsed=`true`


###### IPv4

###### IPv6

###### both

### 文件和路径
> collapsed=`true`


#### FileField\(\)

#### FilePathField\(\)

#### ImageField\(\)

#### BinaryField\(\)

### 关系
> collapsed=`true`


#### ForeignKey\(\)
> collapsed=`true`


##### \.on\_delete
> collapsed=`true`


###### CASECADE

###### SET\_NULL

###### SET\_DEFAULT

###### PROTECT

###### DO\_NOTHING

#### ManyToManyField\(\)

#### OneToOneField\(\)

## 数据查询
> collapsed=`true`


### 数据模型自动生成数据库抽象层查询接口

### 创建、保存对象

### QuerySet
> collapsed=`true`


#### 步骤
> collapsed=`true`


##### 1\.准备查询

##### 2\.编写查询

##### 3\.执行查询

## API
> collapsed=`true`


### 查询所有
> collapsed=`true`


#### \.all\(\)

### 单条
> collapsed=`true`


#### \.get\(\)
> collapsed=`true`


##### Employee\.objects\.get\(id=5\)

##### Employee\.objects\.get\(pk=5\)

##### 异常情况
> collapsed=`true`


###### 不存在，抛出DoesNotExist异常

###### 多结果，抛出MultipleObjectsReturned

#### \.latest\(\)
> collapsed=`true`


##### Employee\.objects\.latest\(posted\_date\)

##### 无参，根据模型类Meta get\_latest\_by字段获取最新

#### \.earlist\(\)
> collapsed=`true`


##### Employee\.objects\.latest\(posted\_date\)

#### \.first\(\)
> collapsed=`true`


##### 获取第一条
> collapsed=`true`


###### Category\.objects\.first\(\)

###### Employee\.objects\.first\(\)

###### Employee\.objects\.order\_by\('\-salary'\)\.first\(\)

###### Category\.objects\.filter\(id\_\_gt=100\)\.first\(\)

#### \.last\(\)
> collapsed=`true`


##### 获取最后一条

### 过滤
> collapsed=`true`


#### \.filter\(\*\*kwargs\)
> collapsed=`true`


##### Category\.objects\.filter\(id=3\)

##### Category\.objects\.filter\(name='饮料'\)

##### Category\.objects\.filter\(name\_\_exact='饮料'\)

##### Category\.objects\.filter\(name\_\_iexact='Abc'\)
> collapsed=`true`


###### 忽略大小写

##### Employee\.objects\.filter\(name\_\_contains='军'\)
> collapsed=`true`


###### 包含值

##### Employee\.objects\.filter\(address\_\_startswith='北京'\)
> collapsed=`true`


###### 以特定值开头

##### Employee\.objects\.filter\(name\_\_endswith='芬'\)
> collapsed=`true`


###### 以特定值结尾

##### Category\.objects\.filter\(id\_\_in=\[1,3,5\]\)
> collapsed=`true`


###### 特定值包含

##### Employee\.objects\.filter\(salary\_\_range=\(3500,5000\)\)
> collapsed=`true`


###### 限定范围查询

##### start=datetime\.date\(1980,1,1\)<br/>end = datetime\.date\(1999,12,31\)<br/>Employee\.objects\.filter\(birthdate\_\_range\(start,end\)\)

##### 比较运算符
> collapsed=`true`


###### Category\.objects\.filter\(id=3\)
> collapsed=`true`


####### 等于

###### Category\.objects\.filter\(id\_\_gt=3\)
> collapsed=`true`


####### 大于

###### Category\.objects\.filter\(id\_\_gte=3\)
> collapsed=`true`


####### 大于等于

###### Category\.objects\.filter\(id\_\_lt=3\)
> collapsed=`true`


####### 小于

###### Category\.objects\.filter\(id\_\_lte=3\)
> collapsed=`true`


####### 小于等于

##### 日期时间
> collapsed=`true`


###### Employee\.objects\.filter\(birthdate\_\_year=1981\)

###### Employee\.objects\.filter\(birthdate\_\_month=8\)

###### Employee\.objects\.filter\(birthdate\_\_day=4\)

##### 是否为空
> collapsed=`true`


###### Employee\.objects\.filter\(birthdate\_\_isnull=True\)

##### 正则条件
> collapsed=`true`


###### Employee\.objects\.filter\(address\_\_regex=r'\.\*?津'\)

#### \.exclude\(\*\*kwargs\)
> collapsed=`true`


##### 与filter互为补集

### 排序
> collapsed=`true`


#### \.order\_by\(\)
> collapsed=`true`


##### Product\.objects\.order\_by\('units\_in\_stock'\)
> collapsed=`true`


###### 默认升序

##### Product\.objects\.order\_by\('\-units\_in\_stock'\)
> collapsed=`true`


###### 降序

##### Product\.objects\.order\_by\('\-units\_in\_stock','unit\_price'\)

##### Product\.objects\.order\_by\('units\_in\_stock'\)\.reverse\(\)
> collapsed=`true`


###### 反转

### 反转
> collapsed=`true`


#### \.reverse\(\)

### 投影查询
> collapsed=`true`


#### \.values\(\*field\) 返回包含特定字段的dict
> collapsed=`true`


##### Employee\.objects\.filter\(\.\.\.\)\.values\('id','name','address'\)

#### \.values\_list\(\*field\) 以tuple类型返回数据项
> collapsed=`true`


##### Employee\.objects\.filter\(\.\.\.\)\.values\_list\('id','name','address'\)

##### Employee\.objects\.filter\(\.\.\.\)\.values\_list\('name', flat=True\)
> collapsed=`true`


###### 适合单列字段

### 延时加载
> collapsed=`true`


#### \.defer\(\*field\) 指定特定字段延时加载
> collapsed=`true`


##### q = Employee\.objects\.defer\('address','salary'\)<br/>for e in q:<br/>    print\(e\.address\)

#### \.only\(\*field\) 除指定字段外所有字段都延时加载
> collapsed=`true`


##### q = Employee\.objects\.only\('id','name'\)

### 查询注释
> collapsed=`true`


#### \.annotate\(\)
> collapsed=`true`


##### q = Category\.objects\.annotate\(Count\('products'\)\):<br/>    for c in q:<br/>        print\(c, 'products\_\_count'\)

### 聚合查询
> collapsed=`true`


#### \.len\(\)
> collapsed=`true`


##### len\(Category\.objects\.all\(\)\)

#### \.count\(\)
> collapsed=`true`


##### Category\.objects\.count\(\)

#### \.aggregate\(\)
> collapsed=`true`


##### django\.db\.models\.Count 统计数量
> collapsed=`true`


###### Employee\.objects\.aggregate\(Count\('salary'\)\)

##### django\.db\.models\.Max
> collapsed=`true`


###### Employee\.objects\.aggregate\(Max\('salary'\)\)

##### django\.db\.models\.Min
> collapsed=`true`


###### Employee\.objects\.aggregate\(Min\('salary'\)\)

##### django\.db\.models\.Avg
> collapsed=`true`


###### Employee\.objects\.aggregate\(Avg\('salary'\)\)

##### django\.db\.models\.Sum
> collapsed=`true`


###### Employee\.objects\.aggregate\(Sum\('salary'\)\)

### 复杂条件查询
> collapsed=`true`


#### 跨关系查询
> collapsed=`true`


##### Product\.objects\.filter\(category\_\_name='饮料'\)

##### Product\.objects\.filter\(category\_\_name\_\_contains='品'\)

#### 多条件组合
> collapsed=`true`


##### Q\(\)对象
> collapsed=`true`


###### Employee\.objects\.filter\(Q\(address\_startswith='北京'\),Q\(birthdate\_\_year=1980\)\)

###### Employee\.objects\.filter\(Q\(address\_startswith='北京'\),Q\(birthdate\_\_year=1980\)|Q\(birthdate\_\_year=1972\)
